--- ../../../../tuxbox-cvs/apps/tuxbox/enigma/lib/dvb/servicedvb.cpp.orig	2004-02-28 20:48:16.000000000 +0100
+++ ../../../../../ideas/diffs/servicedvb.cpp.neu	2004-04-04 12:20:46.000000000 +0200
@@ -24,7 +24,9 @@
 #include <ost/audio.h>
 #define AUDIO_DEV "/dev/dvb/card0/audio0"
+#define DVR_DEV "/dev/pvr"
 #else
 #include <linux/dvb/audio.h>
 #define AUDIO_DEV "/dev/dvb/adapter0/audio0"
+#define DVR_DEV "/dev/dvb/adapter0/dvr0"
 #endif
 
@@ -33,5 +35,5 @@
 
 eDVRPlayerThread::eDVRPlayerThread(const char *_filename, eServiceHandlerDVB *handler, int livemode )
-	:handler(handler), buffer(64*1024), livemode(livemode), liveupdatetimer(this), lock(), messages(this, 1)
+	:handler(handler), buffer(348*188*10), livemode(livemode), liveupdatetimer(this), lock(), messages(this, 1)
 {
 	state=stateInit;
@@ -99,5 +101,5 @@
 	CONNECT(messages.recv_msg, eDVRPlayerThread::gotMessage);
 	
-	maxBufferSize=256*1024;
+	maxBufferSize=128*1024;
 	
 	speed=1;
@@ -153,5 +155,5 @@
 {
 	(void)what;
-	seekbusy-=buffer.tofile(dvrfd, 65536);
+	seekbusy-=buffer.tofile(dvrfd, 348*188);
 	if (seekbusy < 0)
 		seekbusy=0;
@@ -235,5 +237,5 @@
 	}
 	
-	if (((state == stateBuffering) && (buffer.size()>16384)) || flushbuffer)
+	if (((state == stateBuffering) && (buffer.size()>100000)) || flushbuffer)
 	{
 		state=statePlaying;
