Index: lib/dvb/servicedvb.cpp
===================================================================
RCS file: /cvs/tuxbox/apps/tuxbox/enigma/lib/dvb/servicedvb.cpp,v
retrieving revision 1.30
diff -u -r1.30 servicedvb.cpp
--- lib/dvb/servicedvb.cpp	18 Jan 2004 23:49:24 -0000	1.30
+++ lib/dvb/servicedvb.cpp	14 Feb 2004 09:36:31 -0000
@@ -23,9 +23,11 @@
 #if HAVE_DVB_API_VERSION < 3
 #include <ost/audio.h>
 #define AUDIO_DEV "/dev/dvb/card0/audio0"
+#define DVR_DEV "/dev/pvr"
 #else
 #include <linux/dvb/audio.h>
 #define AUDIO_DEV "/dev/dvb/adapter0/audio0"
+#define DVR_DEV "/dev/dvb/adapter0/dvr0"
 #endif
 
 #ifndef DISABLE_FILE
@@ -39,9 +41,10 @@
 	int count=0;
 	seekbusy=0;
 	seeking=0;
+#if HAVE_DVB_API_VERSION < 3
 	do
 	{
-		dvrfd=::open("/dev/pvr", O_WRONLY|O_NONBLOCK); // TODO: change to /dev/dvb/dvr0 (but only when drivers support this!)
+		dvrfd=::open(DVR_DEV, O_WRONLY|O_NONBLOCK); // TODO: change to /dev/dvb/dvr0 (but only when drivers support this!)
 		if (dvrfd < 0)
 		{
 			if ( errno == EBUSY )
@@ -53,12 +56,18 @@
 					continue;
 				}
 			}
-			eDebug("couldn't open /dev/pvr - buy the new $$$ box and load pvr.o! (%m)");
+			eDebug("couldn't open %s - buy the new $$$ box and load pvr.o! (%m)", DVR_DEV);
 			state=stateError;
 		}
 		break;
 	}
 	while( dvrfd < 0 );
+#else
+	if ((dvrfd = ::open(DVR_DEV, O_WRONLY|O_NONBLOCK)) == -1) {
+		perror(DVR_DEV);
+		state=stateError;
+	}
+#endif
 	
 	outputsn=new eSocketNotifier(this, dvrfd, eSocketNotifier::Write, 0);
 	CONNECT(outputsn->activated, eDVRPlayerThread::outputReady);
@@ -192,8 +201,10 @@
 
 void eDVRPlayerThread::dvrFlush()
 {
+#if HAVE_DVB_API_VERSION < 3
 	if ( ::ioctl(dvrfd, 0)< 0 )
 		eDebug("PVR_FLUSH_BUFFER failed (%m)");
+#endif
 	Decoder::flushBuffer();
 }
 
